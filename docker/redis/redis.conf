# ==========================================================================
# IOTCNT - Redis Configuration Example
# ==========================================================================
#
# IMPORTANTE:
# 1. Copie este arquivo para redis.conf
# 2. Ajuste configurações conforme seu ambiente
# 3. Configure senha para produção
#

# --------------------------------------------------------------------------
# Network Configuration
# --------------------------------------------------------------------------
bind 0.0.0.0                            # Bind em todas as interfaces (Docker)
port 6379                                # Porta padrão
timeout 300                              # Timeout de conexão inativa (segundos)
tcp-keepalive 60                         # TCP keepalive

# --------------------------------------------------------------------------
# General Configuration
# --------------------------------------------------------------------------
daemonize no                             # Não executar como daemon (Docker)
supervised no                            # Não usar supervisor
pidfile /var/run/redis_6379.pid         # Arquivo PID

# --------------------------------------------------------------------------
# Security
# --------------------------------------------------------------------------
# ⚠️ IMPORTANTE: Configure senha para produção
# requirepass SUA_SENHA_REDIS_MUITO_SEGURA

# Renomear comandos perigosos (opcional)
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""
# rename-command CONFIG "CONFIG_b840fc02d524045429941cc15f59e41cb7be6c52"

# --------------------------------------------------------------------------
# Memory Management
# --------------------------------------------------------------------------
maxmemory 256mb                          # ⚠️ AJUSTAR conforme RAM disponível
maxmemory-policy allkeys-lru             # Política de remoção quando memória cheia

# Configurações por ambiente:
# Desenvolvimento: 128mb
# Produção pequena: 512mb
# Produção média: 1gb
# Produção grande: 2gb+

# --------------------------------------------------------------------------
# Persistence Configuration
# --------------------------------------------------------------------------
# RDB (snapshots)
save 900 1                               # Salvar se pelo menos 1 chave mudou em 900s
save 300 10                              # Salvar se pelo menos 10 chaves mudaram em 300s
save 60 10000                            # Salvar se pelo menos 10000 chaves mudaram em 60s

stop-writes-on-bgsave-error yes          # Parar escritas se erro no background save
rdbcompression yes                       # Comprimir RDB
rdbchecksum yes                          # Checksum do RDB
dbfilename dump.rdb                      # Nome do arquivo RDB
dir /data                                # Diretório para arquivos de persistência

# AOF (Append Only File) - mais seguro mas mais lento
appendonly yes                           # ⚠️ ATIVAR para produção
appendfilename "appendonly.aof"          # Nome do arquivo AOF
appendfsync everysec                     # Sync a cada segundo (balanceado)
# appendfsync always                     # Sync a cada operação (mais seguro, mais lento)
# appendfsync no                         # Sem sync (mais rápido, menos seguro)

no-appendfsync-on-rewrite no             # Não fazer fsync durante rewrite
auto-aof-rewrite-percentage 100          # Rewrite quando AOF dobrar de tamanho
auto-aof-rewrite-min-size 64mb           # Tamanho mínimo para rewrite

# --------------------------------------------------------------------------
# Logging
# --------------------------------------------------------------------------
loglevel notice                          # Nível de log (debug, verbose, notice, warning)
logfile ""                               # Log para stdout (Docker)
syslog-enabled no                        # Não usar syslog

# --------------------------------------------------------------------------
# Client Configuration
# --------------------------------------------------------------------------
maxclients 100                           # Máximo de clientes conectados
tcp-backlog 511                          # Backlog de conexões TCP

# --------------------------------------------------------------------------
# Performance Tuning
# --------------------------------------------------------------------------
# Hash tables
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# Lists
list-max-ziplist-size -2
list-compress-depth 0

# Sets
set-max-intset-entries 512

# Sorted sets
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog
hll-sparse-max-bytes 3000

# Streams
stream-node-max-bytes 4096
stream-node-max-entries 100

# --------------------------------------------------------------------------
# Slow Log
# --------------------------------------------------------------------------
slowlog-log-slower-than 10000           # Log comandos > 10ms
slowlog-max-len 128                     # Máximo de entradas no slow log

# --------------------------------------------------------------------------
# Latency Monitoring
# --------------------------------------------------------------------------
latency-monitor-threshold 100           # Monitor latência > 100ms

# --------------------------------------------------------------------------
# Event Notification
# --------------------------------------------------------------------------
notify-keyspace-events ""               # Desabilitado por padrão
# Exemplos:
# notify-keyspace-events Ex             # Eventos de expiração
# notify-keyspace-events Kx             # Eventos de keyspace

# --------------------------------------------------------------------------
# Advanced Configuration
# --------------------------------------------------------------------------
# Disable dangerous commands in production
# rename-command DEBUG ""
# rename-command SHUTDOWN SHUTDOWN_IOTCNT_2024

# Memory optimization
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# --------------------------------------------------------------------------
# Lua Scripting
# --------------------------------------------------------------------------
lua-time-limit 5000                     # Timeout para scripts Lua (ms)

# --------------------------------------------------------------------------
# Cluster Configuration (se usar cluster)
# --------------------------------------------------------------------------
# cluster-enabled yes
# cluster-config-file nodes-6379.conf
# cluster-node-timeout 15000
# cluster-require-full-coverage yes

# --------------------------------------------------------------------------
# Configurações Específicas para IOTCNT
# --------------------------------------------------------------------------
# O sistema IOTCNT usa Redis para:
# - Cache de sessões Laravel
# - Cache de configurações
# - Filas de jobs (queue)
# - Cache de dados da API

# Otimizações para este uso:
maxmemory-policy allkeys-lru             # Remove chaves menos usadas
timeout 300                              # Timeout adequado para sessões web
tcp-keepalive 60                         # Manter conexões ativas

# --------------------------------------------------------------------------
# Configurações por Ambiente
# --------------------------------------------------------------------------

# DESENVOLVIMENTO:
# maxmemory 128mb
# save 900 1
# appendonly no

# TESTE:
# maxmemory 256mb
# save 300 10
# appendonly yes

# PRODUÇÃO:
# maxmemory 512mb (ou mais)
# save 60 1000
# appendonly yes
# requirepass senha_muito_segura

# --------------------------------------------------------------------------
# Monitorização
# --------------------------------------------------------------------------
# Comandos úteis para monitorização:
# INFO memory
# INFO stats
# INFO replication
# SLOWLOG GET 10
# CLIENT LIST
# MONITOR (apenas para debug)

# --------------------------------------------------------------------------
# Backup e Recuperação
# --------------------------------------------------------------------------
# Backup manual:
# BGSAVE (cria dump.rdb)
# BGREWRITEAOF (reescreve AOF)

# Backup automático via cron:
# 0 2 * * * redis-cli BGSAVE

# Recuperação:
# 1. Parar Redis
# 2. Copiar dump.rdb ou appendonly.aof
# 3. Iniciar Redis

# --------------------------------------------------------------------------
# Segurança em Produção
# --------------------------------------------------------------------------
# 1. Configure requirepass
# 2. Use bind específico (não 0.0.0.0)
# 3. Configure firewall
# 4. Renomeie comandos perigosos
# 5. Use SSL/TLS se necessário
# 6. Monitore conexões suspeitas
# 7. Faça backups regulares

# --------------------------------------------------------------------------
# Performance Tips
# --------------------------------------------------------------------------
# 1. Use pipeline para múltiplas operações
# 2. Evite comandos KEYS em produção
# 3. Use SCAN em vez de KEYS
# 4. Configure maxmemory adequadamente
# 5. Monitore slow log
# 6. Use estruturas de dados apropriadas
# 7. Configure persistence conforme necessidade

# --------------------------------------------------------------------------
# Troubleshooting
# --------------------------------------------------------------------------
# Problemas comuns:
# - Memória cheia: ajustar maxmemory ou maxmemory-policy
# - Conexões recusadas: verificar maxclients
# - Performance lenta: verificar slow log
# - Dados perdidos: verificar configuração de persistência
# - Erro de permissão: verificar ownership de /data

# --------------------------------------------------------------------------
